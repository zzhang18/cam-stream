{"version":3,"sources":["logo.svg","pages/CamView.js","App.js","reportWebVitals.js","index.js"],"names":["Input","Search","WrappedComponent","hoc","props","style","padding","marginBottom","float","onClick","getChannelsInfo","href","dataSource","channels","columns","title","dataIndex","key","width","sorter","a","b","name","mobile","render","record","src","height","state","user","users","visible","serverInfo","this","t","getServerInfo","axios","get","result","setState","data","LiveQing","Body","Channels","_","times","index","value","filter","cancel","message","success","show","edit","search","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c407d972.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport { Table, Button, Modal, Divider, Popconfirm, Form, Input, message, Result, Popover } from 'antd';\r\nimport _ from 'lodash';\r\n// import { useTranslation, withTranslation } from 'react-i18next';\r\nimport axios from 'axios';\r\nimport ReactJson from 'react-json-view'\r\n\r\nconst { Search } = Input;\r\nfunction CamView(props) {\r\n  \r\n  return (\r\n    <div style={{ padding: 40 }}>\r\n      <div style={{ marginBottom: 20 }}>\r\n        <div >\r\n          <h1 >Cam View</h1>\r\n        </div>\r\n        <div style={{ float: 'left' }}>\r\n          {/* <Button type=\"primary\" style={{ margin: '0 10px 10px 0' }} onClick={() => props.show()}>{t('addUser')}</Button>\r\n          <Search\r\n            placeholder='search user'\r\n            onSearch={(value) => props.search(value)}\r\n            style={{ width: 240 }}\r\n          />\r\n        </div>\r\n        <div style={{ float: 'right' }}>\r\n          <Button style={{ margin: '0 10px 10px 0' }} onClick={async () => {\r\n            i18n.changeLanguage(t('targetLangCode'));\r\n            // props.changeLocale();\r\n          }}>{t('targetLang')}</Button> */}\r\n          <Button onClick={props.getChannelsInfo}>Get channels info</Button>\r\n          <Button><a href='https://github.com/zzhang18/cam-stream'>GitHub</a></Button>\r\n        </div>\r\n        \r\n      </div>\r\n\r\n\r\n\r\n\r\n      {/* <h2>Server info</h2>  \r\n      {props.serverInfo.length >0 ?\r\n        <div>\r\n\r\n        <h3>Server: {props.serverInfo.LiveQing.Body.Server} </h3>\r\n        <h3>Running time: {props.serverInfo.LiveQing.Body.RunningTime} </h3>\r\n        <h3>Hardware: {props.serverInfo.LiveQing.Body.Hardware}</h3>\r\n        <h3>InterfaceVersion: {props.serverInfo.LiveQing.Body.InterfaceVersion}</h3>\r\n      \r\n        </div>\r\n        :\r\n        <div></div>\r\n      } */}\r\n        \r\n        {/* <ReactJson src={props.serverInfo} /> */}\r\n        {/* <h2 sytle={{float:'left'}}>Channel info</h2>   */}\r\n        {/* <ReactJson src={props.channels} /> */}\r\n      <Table\r\n        dataSource={props.channels}\r\n        columns={[\r\n          { title: 'Channel', dataIndex: 'Channel', key: 'Channel', width: 200, sorter: (a, b) => a.name > b.name },\r\n          { title: 'Name', dataIndex: 'Name', key: 'Name', width: 160, sorter: (a, b) => a.mobile - b.mobile },\r\n          { title: 'DeviceType', dataIndex: 'DeviceType', key: 'DeviceType', width: 160 },\r\n          { title: 'SourceVideoCodecName', dataIndex: 'SourceVideoCodecName', key: 'SourceVideoCodecName', width: 160 },\r\n          { title: 'SourceVideoFrameRate', dataIndex: 'SourceVideoFrameRate', key: 'SourceVideoFrameRate', width: 160 },\r\n          { title: 'SourceVideoWidth', dataIndex: 'SourceVideoWidth', key: 'SourceVideoWidth', width: 160 },\r\n          { title: 'SourceVideoHeight', dataIndex: 'SourceVideoHeight', key: 'SourceVideoHeight', width: 160 },\r\n          { title: 'Snapshot', dataIndex: 'SnapURL', key: 'SnapURL', width: 160,\r\n            render: (record) =><img src={'http://localhost:10800'+record} width=\"80px\" height=\"80px\" ></img>\r\n          }\r\n        ]}\r\n      />\r\n      \r\n      <h3 style={{ float: 'right' }}>v.0.0.1</h3>\r\n    </div>\r\n  );\r\n}\r\nlet hoc = (WrappedComponent) => {\r\n  return class EnhancedComponent extends Component {\r\n    get t() { return this.props.t; }\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        user: null,\r\n        users: null,\r\n        visible: false,\r\n        title: 'Add user',\r\n        serverInfo: [],\r\n        channels:[]\r\n      };\r\n    }\r\n\r\n    async componentDidMount() {\r\n      // await this.fetchUsers();\r\n      await this.getServerInfo()\r\n      await this.getChannelsInfo()\r\n    }\r\n\r\n    async getServerInfo(){\r\n      let result = await axios.get('http://localhost:10800/api/v1/getserverinfo');\r\n      // console.log('type',typeof(serverInfo));\r\n      // console.log('result',serverInfo);\r\n      this.setState({serverInfo:result.data});\r\n    }\r\n\r\n    async getChannelsInfo(){\r\n      let result = await axios.get('http://localhost:10800/api/v1/getchannels');\r\n      // console.log('type',typeof(serverInfo));\r\n      // console.log('result',serverInfo);\r\n      this.setState({channels:result.data.LiveQing.Body.Channels});\r\n    }\r\n\r\n    async fetchUsers() {\r\n      let users = _.times(10, index => {\r\n        return {\r\n          \"name\": 'user' + index,\r\n          \"mobile\": 'mobile' + index,\r\n          \"email\": 'email' + index\r\n        };\r\n      }\r\n      );\r\n      this.setState({ users });\r\n    }\r\n\r\n    async search(value) {\r\n      let users = _.times(10, index => {\r\n        return {\r\n          \"name\": 'user' + index,\r\n          \"mobile\": 'mobile' + index,\r\n          \"email\": 'email' + index\r\n        };\r\n      }\r\n      );\r\n      this.setState({ users: value ? _.filter(users, { 'name': value }) : users });\r\n    }\r\n\r\n    async show(user) {\r\n      this.setState({ visible: true, user, title: user ? this.t('editUser') : this.t('addUser') });\r\n    }\r\n\r\n    async edit(user) {\r\n      this.cancel();\r\n    }\r\n\r\n    async cancel() {\r\n      this.setState({ visible: false, user: null });\r\n    }\r\n\r\n    async delete(user) {\r\n      message.success('deleted');\r\n    }\r\n\r\n    render() {\r\n      return <WrappedComponent\r\n        user={this.state.user}\r\n        users={this.state.users}\r\n        title={this.state.title}\r\n        visible={this.state.visible}\r\n        serverInfo={this.state.serverInfo}\r\n        channels={this.state.channels}\r\n        cancel={() => this.cancel()}\r\n        show={(user) => this.show(user)}\r\n        edit={(user) => this.edit(user)}\r\n        search={(value) => this.search(value)}\r\n        getServerInfo={()=>this.getServerInfo()}\r\n        getChannelsInfo={()=>this.getChannelsInfo()}\r\n\r\n      />;\r\n    }\r\n  };\r\n};\r\n\r\nexport default hoc(CamView);\r\n","import logo from './logo.svg';\nimport './App.css';\nimport CamView from './pages/CamView';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header> */}\n      <body>\n        <CamView />\n      </body>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}